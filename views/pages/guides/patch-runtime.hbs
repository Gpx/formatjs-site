{{setTitle "Patching the Runtime for Internationalization Support"}}
{{setDescription "General information on getting started internationalization web apps client and server in JavaScript."}}

<section class="head">
    {{> nav}}
</section>

<section class="main docs l-wrap">
    <h1>Patching the Runtime for Internationalization Support</h1>

    <p>
        The {{brand}} libraries rely on the following <a href="http://www.ecma-international.org/ecma-402/1.0/index.html">ECMA 402</a> internationalization APIs:
    </p>

    <ul>
        <li>
            <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat">{{code "Intl.NumberFormat"}}</a>
        </li>
        <li>
            <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat">{{code "Intl.DateTimeFormat"}}</a>
        </li>
    </ul>

    <p>
        The {{code "Intl"}} APIs are currently available on all modern browsers except Safari. It is not available on mobile browsers, older browsers, or Node.js. See the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#Browser_Compatibility">Mozilla Developer Network documentation</a> for an up-to-date list of capable browsers.
    </p>

    <p>
        If these APIs aren't present, you'll need to patch (polyfill) the runtime to include them.
    </p>

    <section id="toc"></section>

    <section class="secs">
        <h2 id="how-to-patch">
            How to Patch
        </h2>

        <p>
            Since some runtimes already have {{code "Intl"}}, you should only load a patch when needed. You can do this using a conditional loader.
        </p>

        <p>
            One conditional loader is <a href="http://yepnopejs.com/">yepnopejs</a>. Here's an overview of how to use it:
        </p>

{{#code "js"}}
yepnope({
    test : window.Intl,
    nope : ['path/to/intl/polyfill'],
    complete: function () {
        // ...the Intl API can be used here...
    }
});
{{/code}}

        <p id="note">
            <strong>Note</strong> that our <a href="{{pathTo 'integrations'}}">integrations</a> require that {{code "window.Intl"}} exists before they are loaded.
        </p>
    </section>

    <section class="secs">
        <h2 id="intljs">
            Intl.js Polyfill
        </h2>

        <p>
            The <a href="https://github.com/andyearnshaw/Intl.js">Intl.js</a> library, developed by Andy Earnshaw, provides a polyfill for the {{code "Intl"}} API. It needs a locale data file for the current page.
        </p>

{{#code "html"}}
<script src="path/to/intl/Intl.js"></script>
<script src="path/to/intl/locale-data/jsonp/en.js"></script>
...use the locale for the current user, instead of hard-coding to "en"
{{/code}}

        <p>
            In Node.js, the Intl.js library contains data for all locales.
        </p>

{{#code "js"}}
if (!global.Intl) {
    global.Intl = require('intl');
}
{{/code}}

        <p class="note">
            <strong>Note</strong> that the {{code "Intl.js"}} polyfill does not have the {{code "Intl.Collator"}} API. The size of the locale data required to support the API is not practical to load in a client.
        </p>
    </section>

    <section>
        <h2>{{brand}} Guides</h2>

        {{> guides-list}}
    </section>
</section>
